{
  "swagger": "2.0",
  "info": {
    "description": "This is an API for miranda dashboard that use node and express to make a request and receives a response you can view the code: https://github.com/ruben-dev98/Node-Express",
    "version": "1.0.0",
    "title": "Miranda Api Node Express",
    "contact": {
      "email": "ruben.dopico.dev@gmail.com"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "booking",
      "description": "Everything about Bookings"
    },
    {
      "name": "room",
      "description": "Everything about Rooms"
    },
    {
      "name": "employee",
      "description": "Everything about Employees"
    },
    {
      "name": "message",
      "description": "Everything about Messages"
    }
  ],
  "securityDefinitions": {
      "BearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "security": [
      {
        "BearerAuth": []
      }
    ],
  "schemes": ["http"],
  "paths": {
    "/bookings": {
      "get": {
        "tags": ["booking"],
        "summary": "Get all Bookings",
        "description": "Get all Bookings",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "format": "string",
                  "items": {
                    "$ref": "#/definitions/Bookings"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["booking"],
        "summary": "Add a new Booking to the dashboard",
        "description": "",
        "operationId": "addBooking",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Booking object that needs to be added to the dashboard",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bookings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "schema": {
                    "$ref": "#/definitions/Bookings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Data",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Error on adding booking"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      }
    },
    "/bookings/{bookingId}": {
      "get": {
        "tags": ["booking"],
        "summary": "Find Booking by ID",
        "description": "Returns a single Booking",
        "operationId": "getBookingById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "description": "ID of Booking to return",
            "required": true,
            "type": "string",
            "format": "string",
            "example": "6613e11bdbe487b9a51d75dd"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "$ref": "#/definitions/Bookings"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Booking not found"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["booking"],
        "summary": "Updates a Booking with an object of Booking",
        "description": "",
        "operationId": "updateBooking",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "description": "ID of Booking that needs to be updated",
            "required": true,
            "type": "string",
            "format": "string",
            "example": "6613e11bdbe487b9a51d75dd"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Booking object that needs to be edited in the dashboard",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bookings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "schema": {
                    "$ref": "#/definitions/Bookings"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Booking not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Error on edit booking, booking not exist"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["booking"],
        "summary": "Deletes a Booking",
        "description": "",
        "operationId": "deleteBooking",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "bookingId",
            "in": "path",
            "description": "Booking id to delete",
            "required": true,
            "type": "string",
            "format": "string",
            "example": "6613e11bdbe487b9a51d75dd"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Booking not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Error on delete booking, booking not exist"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      }
    },
    "/rooms": {
      "get": {
        "tags": ["room"],
        "summary": "Get all rooms",
        "description": "Get all rooms",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "format": "string",
                  "items": {
                    "$ref": "#/definitions/Rooms"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["room"],
        "summary": "Add a new Room to the dashboard",
        "description": "",
        "operationId": "addRoom",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Room object that needs to be added to the dashboard",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rooms"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "schema": {
                    "$ref": "#/definitions/Rooms"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Data",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Error on adding room"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      }
    },
    "/rooms/{roomId}": {
      "get": {
        "tags": ["room"],
        "summary": "Find Room by ID",
        "description": "Returns a single room",
        "operationId": "getRoomById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "description": "ID of Room to return",
            "required": true,
            "type": "string",
            "format": "string",
            "example": "6613dcf2f0a615a3fcb5b78b"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "$ref": "#/definitions/Rooms"
                }
              }
            }
          },
          "404": {
            "description": "Room not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Room not found"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["room"],
        "summary": "Updates a Room with an object of Room",
        "description": "",
        "operationId": "updateRoom",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "description": "ID of Room that needs to be updated",
            "required": true,
            "type": "string",
            "format": "string",
            "example": "6613dcf2f0a615a3fcb5b78b"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Room object that needs to be edited in the dashboard",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rooms"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "schema": {
                    "$ref": "#/definitions/Rooms"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Room not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Error on edit room, room not exist"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["room"],
        "summary": "Deletes a Room",
        "description": "",
        "operationId": "deleteRoom",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "description": "Room id to delete",
            "required": true,
            "type": "string",
            "format": "string",
            "example": "6613dcf2f0a615a3fcb5b78b"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Room not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Error on delete room, room not exist"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      }
    },
    "/employees": {
      "get": {
        "tags": ["employee"],
        "summary": "Get all Employees",
        "description": "Get all Employees",
        "operationId": "getAllEmployees",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Employees"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["employee"],
        "summary": "Add a new Employee to the dashboard",
        "description": "",
        "operationId": "addEmployee",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "employee object that needs to be added to the dashboard",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Employees"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "schema": {
                    "$ref": "#/definitions/Employees"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Data",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Error on adding employee"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      }
    },
    "/employees/{employeeId}": {
      "get": {
        "tags": ["employee"],
        "summary": "Find Employee by ID",
        "description": "Returns a single Employee",
        "operationId": "getEmployeeById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "description": "ID of Employee to return",
            "required": true,
            "type": "string",
            "format": "string",
            "example": "6613e11adbe487b9a51d75d3"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "$ref": "#/definitions/Employees"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Employee not found"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["employee"],
        "summary": "Updates a Employee with an object of Employee",
        "description": "",
        "operationId": "updateEmployee",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "description": "ID of Employee that needs to be updated",
            "required": true,
            "type": "string",
            "format": "string",
            "example": "6613e11adbe487b9a51d75d3"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Employee object that needs to be edited in the dashboard",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Employees"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "schema": {
                    "$ref": "#/definitions/Employees"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Error on edit employee, employee not exist"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["employee"],
        "summary": "Deletes a Employee",
        "description": "",
        "operationId": "deleteEmployee",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "token",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "Employee id to delete",
            "required": true,
            "type": "string",
            "format": "string",
            "example": "6613e11adbe487b9a51d75d3"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Employee not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Error on delete employee, employee not exist"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      }
    },
    "/messages": {
      "get": {
        "tags": ["message"],
        "summary": "Get all Messages",
        "description": "Get all Messages",
        "operationId": "getAllMessages",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Messages"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["message"],
        "summary": "Add a new Message to the dashboard",
        "description": "",
        "operationId": "addMessage",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Message object that needs to be added to the dashboard",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Messages"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "schema": {
                    "$ref": "#/definitions/Messages"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Data",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Error on adding message"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      }
    },
    "/messages/{messageId}": {
      "get": {
        "tags": ["message"],
        "summary": "Find Message by ID",
        "description": "Returns a single Message",
        "operationId": "getMessageById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "ID of message to return",
            "required": true,
            "type": "string",
            "format": "string",
            "example": "6613e11adbe487b9a51d75c9"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "$ref": "#/definitions/Messages"
                }
              }
            }
          },
          "404": {
            "description": "Message not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Message not found"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["message"],
        "summary": "Updates a Message with an object of Message",
        "description": "",
        "operationId": "updateMessage",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "ID of Message that needs to be updated",
            "required": true,
            "type": "string",
            "format": "string",
            "example": "6613e11adbe487b9a51d75c9"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Message object that needs to be edited in the dashboard",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Messages"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "schema": {
                    "$ref": "#/definitions/Messages"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Message not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Error on edit message, message not exist"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["message"],
        "summary": "Deletes a Message",
        "description": "",
        "operationId": "deleteMessage",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "messageId",
            "in": "path",
            "description": "Message id to delete",
            "required": true,
            "type": "string",
            "format": "string",
            "example": "6613e11adbe487b9a51d75c9"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Success"
                }
              }
            }
          },
          "404": {
            "description": "Message not found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Error on delete message, message not exist"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request lacks basic authentication",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Unauthorized. The request lacks basic authentication"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The server understood the request but refused to authorize it.",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "format": "string",
                  "example": "Forbidden. The server understood the request but refused to authorize it."
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Bookings": {
      "type": "object",
      "properties": {
        "full_name": {
          "type": "string",
          "format": "string",
          "example": "Jefferson Fernandez"
        },
        "order_date": {
          "type": "integer",
          "format": "int64",
          "example": 1445577888
        },
        "check_in": {
          "type": "integer",
          "format": "int64",
          "example": 1445577888
        },
        "check_out": {
          "type": "integer",
          "format": "int64",
          "example": 1445577888
        },
        "special_request": {
          "type": "string",
          "format": "string",
          "example": "LOREM_IPSUM"
        },
        "status": {
          "type": "string",
          "format": "string",
          "example": "Check In"
        },
        "phone": {
          "type": "number",
          "format": "int64",
          "example": 222333555
        },
        "email": {
          "type": "string",
          "format": "string",
          "example": "algo@gmail.com"
        },
        "room": {
          "type": "object",
          "schema": {
            "$ref": "#/definitions/Rooms"
          }
        }
      }
    },
    "Rooms": {
      "type": "object",
      "properties": {
        "photo": {
          "type": "string",
          "format": "string",
          "example": "algun enlace de foto"
        },
        "type": {
          "type": "string",
          "format": "string",
          "example": "Single Bed"
        },
        "number": {
          "type": "integer",
          "format": "int64",
          "example": 133
        },
        "description": {
          "type": "string",
          "format": "string",
          "example": "LOREM_IPSUM"
        },
        "offer": {
          "type": "boolean",
          "example": true
        },
        "price": {
          "type": "integer",
          "format": "int64",
          "example": 255
        },
        "cancellation": {
          "type": "string",
          "format": "string",
          "example": "LOREM_IPSUM"
        },
        "amenities": {
          "type": "array",
          "example": "[Expert Team]"
        },
        "discount": {
          "type": "number",
          "format": "int64",
          "example": 25
        },
        "status": {
          "type": "string",
          "format": "string",
          "example": "Available"
        }
      }
    },
    "Employees": {
      "type": "object",
      "properties": {
        "photo": {
          "type": "string",
          "format": "string",
          "example": "algun enlace de foto"
        },
        "full_name": {
          "type": "string",
          "format": "string",
          "example": "Jefferson Fernandez"
        },
        "email": {
          "type": "string",
          "format": "string",
          "example": "algo@gmail.com"
        },
        "start_date": {
          "type": "string",
          "format": "date-time",
          "example": "2022/09/02"
        },
        "description": {
          "type": "string",
          "format": "string",
          "example": "LOREM_IPSUM"
        },
        "job": {
          "type": "string",
          "format": "string",
          "example": "Manager"
        },

        "contact": {
          "type": "string",
          "format": "string",
          "example": "222-222-222"
        },
        "price": {
          "type": "integer",
          "format": "int64",
          "example": 255
        },
        "status": {
          "type": "boolean",
          "example": true
        },
        "password": {
          "type": "string",
          "default": "string",
          "example": "contraseña encriptada"
        }
      }
    },
    "Messages": {
      "type": "object",
      "properties": {
        "full_name": {
          "type": "string",
          "format": "string",
          "example": "Jefferson Fernandez"
        },
        "email": {
          "type": "string",
          "format": "string",
          "example": "algo@gmail.com"
        },
        "phone": {
          "type": "string",
          "format": "string",
          "example": "222-222-222"
        },
        "subject": {
          "type": "string",
          "format": "string",
          "example": "LOREM_IPSUM"
        },
        "message": {
          "type": "string",
          "format": "string",
          "example": "LOREM_IPSUM"
        },
        "date": {
          "type": "number",
          "format": "int64",
          "example": 201548720112
        },
        "read": {
          "type": "boolean",
          "example": true
        },
        "archived": {
          "type": "boolean",
          "example": true
        },
        "photo": {
          "type": "string",
          "format": "string",
          "example": "algun enlace de foto"
        },
        "time_passed": {
          "type": "string",
          "default": "string",
          "example": "4 mins ago"
        }
      }
    }
  }
}
